name: Download Securely

on:
  schedule:
    - cron: '30 0 * * *'
  workflow_dispatch:

jobs:
  download:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

 #   - name: Secure Slayer Download with Retry
  #    run: |
 #       echo "::add-mask::$SLAYER_URL"
   #     for i in {1..100}; do
   #       wget --quiet --output-document=slayer "$SLAYER_URL" && break
   #       echo "Attempt $i failed, retrying in 5 seconds..."
     #     sleep 5
   #     done
     #   if [ ! -f slayer ]; then
      #    echo "Download failed after 100 attempts."
     #     exit 1
  #      fi
    #  env:
    #    SLAYER_URL: ${{ secrets.SLAYER_URL }}

  #  - name: Secure Hyywl Download with Retry
   #   run: |
     #   echo "::add-mask::$HYYWL_URL"
      #  for i in {1..100}; do
    #      wget --quiet --output-document=hyywl "$HYYWL_URL" && break
     #     echo "Attempt $i failed, retrying in 5 seconds..."
   #       sleep 5
   #     done
    #    if [ ! -f hyywl ]; then
   #       echo "Download failed after 100 attempts."
    #      exit 1
    #    fi
  #    env:
   #     HYYWL_URL: ${{ secrets.HYYWL_URL }}
        
    - name: Secure vae Download with Retr
      run: |
        echo "::add-mask::$VAE_URL"
        for i in {1..100}; do
          wget --quiet --output-document=vae.enc "$VAE_URL" && break
          echo "Attempt $i failed, retrying in 5 seconds..."
          sleep 5
        done
        if [ ! -f vae.enc ]; then
          echo "Download failed after 100 attempts."
          exit 1
        fi
      env:
        VAE_URL: ${{ secrets.VAE_URL }}
    
    - name: Secure cme Download with Retr
      run: |
        echo "::add-mask::$CME_URL"
        for i in {1..100}; do
          wget --quiet --output-document=cme.enc "$CME_URL" && break
          echo "Attempt $i failed, retrying in 5 seconds..."
          sleep 5
        done
        if [ ! -f cme.enc ]; then
          echo "Download failed after 100 attempts."
          exit 1
        fi
      env:
        CME_URL: ${{ secrets.CME_URL }}
    
    - name: Secure ru Download with Retr
      run: |
        echo "::add-mask::$RU_URL"
        for i in {1..100}; do
          wget --quiet --output-document=ru "$RU_URL" && break
          echo "Attempt $i failed, retrying in 5 seconds..."
          sleep 5
        done
        if [ ! -f ru ]; then
          echo "Download failed after 100 attempts."
          exit 1
        fi
      env:
        RU_URL: ${{ secrets.RU_URL }}

    - name: Encrypt files with OpenSSL (Secure Method)
      run: |
        echo "${{ secrets.ENCRYPTION_KEY }}" | openssl enc -aes-256-cbc -salt -pbkdf2 -pass stdin -in ru -out ru.enc
    #    echo "${{ secrets.ENCRYPTION_KEY }}" | openssl enc -aes-256-cbc -salt -pbkdf2 -pass stdin -in slayer -out slayer.enc
     #   echo "${{ secrets.ENCRYPTION_KEY }}" | openssl enc -aes-256-cbc -salt -pbkdf2 -pass stdin -in hyywl -out hyywl.enc

    - name: Remove original files
      run: |
        shred -u ru
      #  shred -u slayer hyywl

    - name: Add and commit changes if needed
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"

        git add vae.enc cme.enc ru.enc
        git status

        if git diff --cached --quiet; then
          echo "No changes to commit."
        else
          git commit -m "Update encrypted vae.enc cme.enc ru.enc"
          git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/Charlotteanty/yapsy.git
        fi
        
